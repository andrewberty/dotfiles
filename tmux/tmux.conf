###########
# OPTIONS #
###########
set  -g    mouse on
set  -g    cursor-style blinking-bar
set  -g    status-position bottom
set  -g    focus-events on
set  -g    allow-passthrough on
set  -ga   update-environment TERM
set  -ga   update-environment TERM_PROGRAM
set  -g    set-clipboard on
set  -g    display-time 1500
set  -g    base-index 1
set  -g    renumber-windows on
set  -g    allow-rename off
set  -g    history-limit 10000
set  -g    terminal-overrides ",xterm-256color:RGB"
set  -g    set-titles on
set  -g    visual-bell off
set  -g    visual-activity off
set  -g    detach-on-destroy off # don't detach tmux when killing a session
set  -g    status-interval 1
set  -g    popup-border-lines rounded
set  -g    popup-border-style fg="#222222"
set  -g    prefix C-a
set  -g    escape-time 1
setw -g    pane-base-index 1
setw -g    aggressive-resize on
setw -g    mode-keys vi # Use Vi mode

###########
# KEYMAPS #
###########
unbind    C-b
bind      C-a send-prefix

bind      R source-file "~/dotfiles/tmux/tmux.conf" \; display-message " 󰄵  Configuration Reloaded!"

bind      x kill-pane
bind      C-x kill-session

bind      | split-window -v -c "#{pane_current_path}"
bind      \\ split-window -h -c "#{pane_current_path}"
unbind    '"'
unbind    %

unbind    Tab
unbind    n
unbind    p
bind -n   M-Tab next-window

bind      c new-window -c "#{pane_current_path}"

# if there is only one pane, split down and focus the bottom pane
bind      j if-shell '[ "$(tmux list-panes | wc -l | bc)" = 1 ]' { 
  split-window -l 30%; select-pane -t 2 } {
# if there are more that one pane and we are in the bottom pane, select the previous pane and zoom it
  if-shell '[ $(tmux display-message -p "#{pane_index}") = 2 ]' { 
    select-pane -t:.-; resize-pane -Z } { 
      # if we are in the first pane, select the bottom pane
      select-pane -t 2;
    }
}

bind      k display-popup -E -w 50% "sesh connect \"$(
	sesh list -i | gum filter --indicator='▸' --limit 1 --placeholder 'Pick a sesh' --height 50 --prompt='⚡'
)\""

bind -n C-k run "~/dotfiles/scripts/theme-switcher.zsh";
bind -n C-f run "~/dotfiles/scripts/font-switcher.zsh";

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n 'M-Left'  if-shell "$is_vim" 'send-keys M-Left'   'select-pane -L'
bind -n 'M-Down'  if-shell "$is_vim" 'send-keys M-Down'   'select-pane -D'
bind -n 'M-Up'    if-shell "$is_vim" 'send-keys M-Up'     'select-pane -U'
bind -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'

bind -T copy-mode-vi 'M-Left' select-pane -L
bind -T copy-mode-vi 'M-Down' select-pane -D
bind -T copy-mode-vi 'M-Up' select-pane -U
bind -T copy-mode-vi 'M-Right' select-pane -R

source ~/dotfiles/tmux/tmux-status.conf

#######################################################################
# PLUGINS
#######################################################################
set -g    @plugin 'tmux-plugins/tpm'
set -g    @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g    @plugin 'rose-pine/tmux'

set -g    @rose_pine_variant 'moon' # Options are 'main', 'moon' or 'dawn'

set -g    @rose_pine_bar_bg_disable 'on' # Disables background color, for transparent terminal emulators
set -g    @rose_pine_bar_bg_disabled_color_option 'default'

set -g    @rose_pine_disable_active_window_menu 'on' # Disables the menu that shows the active window on the left

set -g    @rose_pine_session_icon ' ' 
set -g    @rose_pine_folder_icon ' ' 

run '~/.config/tmux/plugins/tpm/tpm'
