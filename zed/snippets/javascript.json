{
	"Functional Component": {
		"prefix": "rfc",
		"body": [
			"export default function ${1:ComponentName}({ ${2:propName} }) {",
			"  return (",
			"    <div>",
			"      $0",
			"    </div>",
			"  );",
			"};"
		],
		"description": "JSX: React Functional Component"
	},
	"useState Hook": {
		"prefix": "state",
		"body": ["const [${1:state}, set${1:state}] = useState();"],
		"description": "useState Hook with Javascript"
	},
	"useEffect Hook run once at mount": {
		"prefix": "eff",
		"body": ["useEffect(() => {", "  $0", "}, []);"],
		"description": "useEffect Hook runs once at mount"
	},
	"useMemo": {
		"prefix": "useMemo",
		"body": ["useMemo(() => {", "  $0", "}, [${1:deps}]);"],
		"description": "useMemo Hook"
	},
	"useCallback": {
		"prefix": "useCallback",
		"body": ["useCallback(() => {", "  $0", "}, [${1:deps}]);"],
		"description": "useCallback Hook"
	},
	"useRef": {
		"prefix": "ref",
		"body": ["const ${1:ref} = useRef(null);"],
		"description": "useRef Hook"
	},
	"Next.js Image": {
		"prefix": "nimg",
		"body": [
			"import Image from 'next/image';",
			"",
			"<Image src=\"$1\" alt=\"$2\" width={$3} height={$4} />"
		],
		"description": "Next.js Image component"
	},
	"Console Log": {
		"prefix": "cl",
		"body": ["console.log($1);"],
		"description": "Console Log"
	},
	"React Context Template": {
		"prefix": "context",
		"body": [
			"import React, { createContext, useContext, useState } from 'react';",
			"",
			"const $1Context = createContext();",
			"",
			"export function use$1() {",
			"  return useContext($1Context);",
			"}",
			"",
			"export function $1Provider({ children }) {",
			"  const [$2, set$2] = useState($3);",
			"  return (",
			"    <$1Context.Provider value={{ $2, set$2 }}>",
			"      {children}",
			"    </$1Context.Provider>",
			"  );",
			"}"
		],
		"description": "React Context with Provider and Hook"
	}
}
